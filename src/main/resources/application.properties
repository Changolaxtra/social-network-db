spring.datasource.initialization-mode=always
spring.datasource.url=jdbc:mysql://127.0.0.1
spring.datasource.username=root
spring.datasource.password=password

spring.datasource.hikari.maximumPoolSize=250

spring.main.web-application-type=none

db.id.length=10
db.batch.size=1500
db.batch.threads=200
db.users.size=1000
db.friendship.min=70
db.friendship.max=120
db.like.min=90
db.like.max=120
db.like.percentage=10
db.user.insert.statement=INSERT INTO social_network.user (id,firstname,surname,birthdate) VALUES (?,?,?,?)
db.post.insert.statement=INSERT INTO social_network.post (id,user_id,text,timestamp) VALUES (?,?,?,?)
db.friendship.insert.statement=INSERT INTO social_network.friendship (user_id1,user_id2,timestamp) VALUES (?,?,?)
db.like.insert.statement=INSERT INTO social_network.like_reaction (post_id,user_id,timestamp) VALUES (?,?,?)

db.query.users.100likes.100friends=select distinct u.firstname from user u inner join post p on p.user_id = u.id inner join like_reaction lk on lk.post_id = p.id where u.firstname in (select u.firstname from user u inner join friendship f on f.user_id1=u.id group by u.id having count(f.user_id1) > 100) group by p.id having count(lk.post_id) > 100;
